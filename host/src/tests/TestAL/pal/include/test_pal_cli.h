/*
 * Copyright (c) 2001-2019, Arm Limited and Contributors. All rights reserved.
 *
 * SPDX-License-Identifier: BSD-3-Clause OR Armâ€™s non-OSI source license
 *
 */

#ifndef TEST_PAL_CLI_H_
#define TEST_PAL_CLI_H_

/*!
 @file
 @brief This file contains CLI APIs used by tests. Supported only for FreeRTOS.
 */

/*!
 @addtogroup pal_cli_test
 @{
 */

#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef int (*COMMAND_CALLBACK)(char *pcWriteBuffer, size_t xWriteBufferLen,
    const char *pcCommandString);

struct Test_PalCliCommand {
 /*! The command that causes pxCommandInterpreter to be executed.
  * For example "help".  Must be all lower case. */
 const char            *const pcCommand;
 /*! String that describes how to use the command. Should start
  * with the command itself, and end with "\r\n".
  * For example "help: Returns a list of all the commands\r\n". */
 const char            *const pcHelpString;
 /*! A pointer to the callback function that will return the output
  * generated by the command. */
 const COMMAND_CALLBACK        pxCommandInterpreter;
 int8_t                cExpectedNumberOfParameters;
};

/******************************************************************************/
/*!
 * @brief This function registers a new CLI command.
 *
 *
 * @return 0 on success.
 * @return 1 on failure.
 */
uint32_t Test_PalCLIRegisterCommand(
 /*! Command structure.*/
 struct Test_PalCliCommand *commandToRegister
);

/******************************************************************************/
/*!
 * @brief This function obtains a parameter string by its index and stores the
 * parameter string length.
 *
 *
 * @return Parameter string on success.
 * @return NULL on failure.
 */
const char *Test_PalCLIGetParameter(
 /*! The command string itself.*/
 const char *commandString,
 /*! Parameter index.*/
 uint32_t wantedParamIndx,
 /*! Parameter string length.*/
 uint32_t *paramStringLength
);

#ifdef __cplusplus
}
#endif
/*!
 @}
 */
#endif /* TEST_PAL_CLI_H_ */
