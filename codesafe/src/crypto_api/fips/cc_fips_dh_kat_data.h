/*
 * Copyright (c) 2001-2019, Arm Limited and Contributors. All rights reserved.
 *
 * SPDX-License-Identifier: BSD-3-Clause OR Arm's non-OSI source license
 *
 */

#ifndef  _CC_FIPS_DH_KAT_DATA_H
#define  _CC_FIPS_DH_KAT_DATA_H

/*
vectors taken from:
http://csrc.nist.gov/groups/STM/cavp/key-management.html#kas
http://csrc.nist.gov/groups/STM/cavp/documents/keymgmt/KASTestVectorsFFC2014.zip
KASTestVectorsFFC2014/Test of 800-56A excluding KDF/FFC Static Scheme/KASValidityTest_FFCStatic_NOKC_ZZOnly_init.fax
COUNT = 1
*/

// prime number ps =:
static const uint8_t fipsDhKat2048PrimeP[] = {
        0xec, 0x6d, 0x9f, 0x49, 0x22, 0xc4, 0xb8, 0x8d, 0x8d, 0x19, 0x18, 0xce, 0xd6, 0xf9, 0xeb, 0x56,
        0xbc, 0xfd, 0x2b, 0xf5, 0xab, 0x45, 0x78, 0xc0, 0x07, 0x49, 0x18, 0xd9, 0x19, 0x6e, 0xa9, 0xb9,
        0x0b, 0x9d, 0x56, 0xc2, 0x3d, 0x98, 0x16, 0x46, 0x95, 0x3c, 0xe0, 0x4a, 0xfe, 0x70, 0x2f, 0xa1,
        0x0d, 0x41, 0x90, 0xe6, 0x76, 0xfa, 0x9e, 0x37, 0x33, 0x0c, 0xa0, 0xaa, 0x0c, 0x79, 0xbd, 0x1f,
        0x27, 0x1c, 0xbc, 0xbf, 0x8f, 0x8d, 0x4e, 0x27, 0xd3, 0x07, 0x81, 0x13, 0xae, 0xd0, 0xf7, 0xf9,
        0xb6, 0x51, 0x4f, 0x1d, 0x70, 0xe8, 0x83, 0x92, 0xce, 0x36, 0x75, 0x57, 0x7c, 0xf2, 0x0d, 0x29,
        0xa9, 0xba, 0xc7, 0x29, 0x7b, 0xe7, 0x81, 0xbf, 0x8b, 0x27, 0xff, 0xa3, 0xe8, 0x62, 0xb4, 0xf1,
        0x7a, 0x99, 0xc5, 0x88, 0x1f, 0xbf, 0x47, 0x3f, 0xa2, 0x77, 0x21, 0x93, 0x22, 0x85, 0x9b, 0x2d,
        0x6c, 0xaf, 0x73, 0x70, 0x4f, 0x4d, 0x5c, 0x2f, 0x5d, 0x6a, 0xa5, 0x3e, 0x5d, 0xeb, 0xec, 0x4c,
        0x58, 0x0a, 0x71, 0x7f, 0x51, 0xe1, 0xe6, 0x54, 0xf1, 0xd7, 0x33, 0x49, 0x00, 0xc3, 0xe7, 0xc8,
        0x8b, 0x08, 0xff, 0xf0, 0x4e, 0x4e, 0xb3, 0xa1, 0x75, 0x52, 0xb6, 0x71, 0xc6, 0xec, 0x44, 0x55,
        0x60, 0x08, 0xbb, 0x65, 0xbd, 0xd7, 0xee, 0x82, 0xc1, 0xf6, 0x14, 0xbd, 0x80, 0x60, 0xba, 0xfb,
        0xda, 0x7f, 0x6f, 0x2f, 0xd8, 0xb5, 0x3a, 0x2c, 0x2a, 0x00, 0xed, 0xf2, 0xd5, 0xb1, 0xf3, 0x28,
        0x33, 0x93, 0xd1, 0x96, 0x56, 0x7f, 0xee, 0xae, 0x5e, 0xa8, 0xd2, 0xce, 0xea, 0xbe, 0x53, 0xfd,
        0xc9, 0xed, 0xfc, 0x9a, 0x24, 0x83, 0xd9, 0xba, 0x47, 0xc7, 0x9b, 0x54, 0xda, 0x03, 0xdd, 0x88,
        0x4e, 0xc4, 0x47, 0xb3, 0x67, 0x16, 0x1e, 0xfd, 0x6b, 0x3c, 0xc6, 0x2e, 0x3e, 0xd9, 0x97, 0x7d
};

//xU =
static const uint8_t fipsDhKat2048InitiatorPrivKey[] = {
        0x3a, 0xbe, 0xf2, 0x37, 0x1d, 0xee, 0xb2, 0x6a, 0xdf, 0xd4, 0x0c, 0x17, 0x88, 0xb5, 0x14, 0xc5,
        0xf4, 0x20, 0xeb, 0x09, 0xfa, 0x5e, 0x1b, 0xc0, 0xf9, 0xa5, 0x52, 0xb1
};

//yU =
static const uint8_t fipsDhKat2048InitiatorPubKey[] = {
        0x60, 0x88, 0xcd, 0x6a, 0x93, 0x08, 0xc4, 0x41, 0x8d, 0x17, 0xf3, 0xc2, 0x76, 0x4c, 0x5a, 0xc9,
        0x8d, 0x62, 0xc5, 0x65, 0x5a, 0x31, 0x28, 0xb6, 0xbd, 0x2d, 0x81, 0xa6, 0xf2, 0x93, 0x73, 0x47,
        0xad, 0x8d, 0x8d, 0xc6, 0xd0, 0x1c, 0xa6, 0xa2, 0x31, 0xbe, 0xe0, 0x8c, 0x18, 0x72, 0x61, 0xca,
        0x96, 0x34, 0x70, 0xe0, 0xcc, 0xe7, 0x6c, 0x14, 0xcf, 0x05, 0xe9, 0xb7, 0xb3, 0x91, 0x64, 0x2a,
        0xe9, 0xd5, 0xc5, 0xcf, 0xe9, 0x9d, 0x49, 0xd3, 0x52, 0xd5, 0xf8, 0xe7, 0x72, 0x81, 0x53, 0x55,
        0x80, 0x05, 0x50, 0xc7, 0x6c, 0x10, 0x72, 0x09, 0x82, 0x16, 0x18, 0x3e, 0x58, 0x0f, 0x97, 0x3c,
        0x1a, 0xca, 0x12, 0x44, 0xa3, 0xa0, 0xcd, 0xd3, 0x22, 0xef, 0x6a, 0x70, 0xbb, 0x3d, 0x9d, 0x60,
        0x67, 0xb8, 0x40, 0x51, 0x91, 0xc7, 0xc2, 0x17, 0xe1, 0x1e, 0x47, 0xee, 0xe8, 0x5a, 0xde, 0xe1,
        0xef, 0x73, 0xb4, 0xaa, 0x56, 0x52, 0x33, 0xeb, 0x32, 0x3d, 0xa0, 0x13, 0xb9, 0xfa, 0x00, 0xb0,
        0x66, 0x4d, 0xe3, 0xaa, 0x28, 0x9f, 0xf7, 0x0f, 0xc6, 0x33, 0x9e, 0xf2, 0xb9, 0x4e, 0xcd, 0x2b,
        0xdb, 0xa9, 0x01, 0x7e, 0x95, 0x03, 0xb1, 0x49, 0x55, 0x93, 0x48, 0xd1, 0xcf, 0x46, 0x1f, 0x41,
        0xe8, 0xa1, 0x29, 0x37, 0x15, 0x7b, 0x71, 0xb1, 0x4b, 0x7e, 0x51, 0x4f, 0x90, 0x7d, 0x07, 0xe9,
        0x54, 0x96, 0x87, 0x4b, 0x55, 0x9c, 0xe2, 0x5e, 0xb6, 0xc6, 0x31, 0x8b, 0x4b, 0xa0, 0x50, 0xff,
        0xaa, 0x52, 0x1b, 0x8b, 0x82, 0x33, 0xce, 0x5c, 0x93, 0xcf, 0x0c, 0x2a, 0xaf, 0xd4, 0xa5, 0x9b,
        0x27, 0x26, 0x8f, 0x94, 0x3f, 0xea, 0xbc, 0x81, 0xe1, 0x5d, 0xae, 0xe6, 0xac, 0x84, 0x70, 0x36,
        0xcc, 0x96, 0x2d, 0x28, 0xb4, 0xd1, 0xd4, 0x0f, 0x39, 0x68, 0xc6, 0x95, 0x43, 0x28, 0x81, 0xbd
};
//xV =
static const uint8_t fipsDhKat2048ResponderPrivKey[] = {
        0x6f, 0x01, 0xb4, 0xa2, 0x19, 0xe0, 0x81, 0xb5, 0x0f, 0x85, 0x6a, 0xeb, 0xc0, 0x11, 0xe4, 0x16,
        0x80, 0x69, 0x2e, 0x80, 0x5a, 0x49, 0x8d, 0xf4, 0x08, 0x96, 0x0d, 0xba
};

//yV =
static const uint8_t fipsDhKat2048ResponderPubKey[] = {
        0xe7, 0x96, 0xa1, 0x48, 0x65, 0x6a, 0x2b, 0x39, 0x1a, 0x6f, 0x81, 0xdd, 0x7f, 0x83, 0xad, 0x4a,
        0x3a, 0x72, 0xf6, 0x29, 0xa8, 0x7f, 0xad, 0x6e, 0xc9, 0xf4, 0x61, 0x6e, 0x0a, 0xe0, 0xb3, 0xde,
        0x34, 0xcf, 0xb0, 0x64, 0x0c, 0x0c, 0x92, 0xc1, 0xe8, 0xd8, 0x45, 0xc5, 0x17, 0x25, 0x8b, 0xeb,
        0xcc, 0x9d, 0x8a, 0xe7, 0xfd, 0xd7, 0x7d, 0xc7, 0x2c, 0x6e, 0xdc, 0x0e, 0xe0, 0x5c, 0x25, 0x61,
        0x29, 0x4c, 0x0e, 0xf5, 0x0a, 0xb9, 0x0b, 0xa3, 0xb7, 0x40, 0xba, 0xc3, 0x2c, 0x9a, 0x2d, 0xf1,
        0x72, 0x94, 0xf2, 0x2b, 0xf5, 0xfe, 0xa4, 0x74, 0xe7, 0xff, 0x48, 0xda, 0xea, 0x6a, 0xbf, 0x48,
        0xdb, 0xa6, 0xf6, 0xc7, 0x56, 0x2a, 0x6d, 0xdf, 0xaa, 0xf9, 0xc2, 0x14, 0x6d, 0x3a, 0xe2, 0xf1,
        0xde, 0x8b, 0x9e, 0x68, 0x09, 0x2a, 0xd7, 0x6c, 0xaa, 0x76, 0x7a, 0x2c, 0x96, 0x97, 0x5f, 0xc8,
        0xb1, 0xa8, 0x8e, 0x88, 0x48, 0xeb, 0x08, 0x9c, 0x43, 0x8d, 0x5f, 0x93, 0x2d, 0x63, 0x3e, 0x79,
        0xda, 0x19, 0x80, 0x8f, 0xa3, 0xa1, 0xe4, 0x11, 0xad, 0x26, 0x05, 0x65, 0xc4, 0x95, 0x4a, 0xd3,
        0x2b, 0xb0, 0xd9, 0x4b, 0x0b, 0x74, 0x6f, 0x52, 0x66, 0x24, 0x19, 0x28, 0xf3, 0xf0, 0xa4, 0x44,
        0x1f, 0x31, 0x87, 0x00, 0xd9, 0xe9, 0x3c, 0x6d, 0x0f, 0x7d, 0x57, 0xe8, 0x83, 0xeb, 0x8b, 0x37,
        0x3f, 0x4e, 0x78, 0x93, 0x28, 0x59, 0x67, 0x02, 0x8e, 0x9e, 0x09, 0xc7, 0x74, 0x34, 0x4c, 0x05,
        0x41, 0x8d, 0x63, 0x59, 0x23, 0x6f, 0xb0, 0x92, 0xf2, 0xe3, 0xa4, 0x54, 0x48, 0x36, 0x56, 0x81,
        0x73, 0x17, 0xab, 0xf3, 0x09, 0xcd, 0x7f, 0x80, 0x16, 0xc5, 0x01, 0x13, 0x3b, 0xb8, 0xb4, 0x08,
        0x75, 0xa0, 0xff, 0x3b, 0x04, 0x58, 0x0a, 0xbe, 0x4d, 0x4e, 0x71, 0x71, 0x51, 0x10, 0x5b, 0xd2
};

//Zs = yV ^ xU mod ps = yU ^ xV mod ps =
static const uint8_t fipsDhKat2048Secret[] = {
        0xb5, 0xf4, 0x7d, 0x4a, 0x7d, 0xab, 0xd5, 0xe6, 0x9c, 0x28, 0x90, 0xdf, 0x50, 0xc0, 0xcd, 0x6f,
        0x4a, 0xb9, 0x56, 0x8f, 0xc6, 0x67, 0x79, 0x38, 0x1f, 0xae, 0x53, 0x85, 0xb8, 0x0d, 0x75, 0x77,
        0xd5, 0xea, 0xe0, 0x0f, 0x30, 0x7a, 0xb3, 0x9b, 0x7e, 0xfc, 0x68, 0xf8, 0x85, 0xc3, 0x65, 0xe1,
        0x9f, 0x0a, 0x30, 0xc6, 0x5e, 0xcb, 0x46, 0xb9, 0x5f, 0xd0, 0x8e, 0x0e, 0xbe, 0xac, 0x55, 0xd3,
        0xd0, 0x12, 0xb9, 0xf7, 0x02, 0x94, 0xa2, 0x68, 0xa2, 0x54, 0x06, 0x95, 0x74, 0xfb, 0x07, 0xa3,
        0x16, 0x25, 0x07, 0x7b, 0x72, 0x0c, 0xc1, 0xb9, 0x43, 0xab, 0x20, 0x5e, 0x7a, 0x29, 0xe3, 0xdb,
        0xef, 0xaa, 0x47, 0x01, 0xa5, 0xaf, 0xbb, 0x05, 0xe3, 0xd9, 0x0f, 0xfe, 0x7c, 0x5f, 0x1b, 0x9c,
        0xa9, 0xad, 0x77, 0xd1, 0x4a, 0x7d, 0x44, 0x48, 0xd7, 0xb7, 0xf5, 0x52, 0xec, 0x18, 0xab, 0xa4,
        0x7d, 0xc0, 0x34, 0xa8, 0x26, 0x8b, 0x04, 0x38, 0xcc, 0x2e, 0xe4, 0xf1, 0xda, 0xd9, 0xf0, 0x80,
        0x00, 0xbf, 0x37, 0x1d, 0xff, 0xeb, 0x8b, 0xe7, 0x7a, 0x75, 0x21, 0xe7, 0x86, 0xad, 0xd0, 0x31,
        0x44, 0xbe, 0x77, 0x5c, 0xe1, 0xc3, 0x42, 0x5a, 0x62, 0x22, 0x6b, 0x1a, 0xac, 0xef, 0x10, 0x47,
        0x6e, 0x69, 0x36, 0xb8, 0x31, 0x82, 0x8d, 0x9c, 0x54, 0x5d, 0xdd, 0x9d, 0x6c, 0x4e, 0x76, 0x86,
        0x1b, 0xa1, 0x82, 0x5d, 0xef, 0xf5, 0x5d, 0x4b, 0xd3, 0xb0, 0xc4, 0xa9, 0xa9, 0x38, 0xfd, 0xef,
        0x3a, 0xdb, 0xbe, 0xa4, 0x82, 0x06, 0x90, 0x2b, 0x56, 0x65, 0xb9, 0xbe, 0xd6, 0xb7, 0xc1, 0x2e,
        0xb5, 0xfd, 0x8c, 0x0b, 0x6d, 0xa4, 0x25, 0x65, 0x4b, 0x41, 0x23, 0x5d, 0x78, 0x52, 0xe1, 0x39,
        0x07, 0x3b, 0xfb, 0x2c, 0xb7, 0xdc, 0xe0, 0x12, 0x94, 0xee, 0xc2, 0x0f, 0x85, 0x84, 0x7c, 0xac,
};

#endif // _CC_FIPS_DH_KAT_DATA_H
